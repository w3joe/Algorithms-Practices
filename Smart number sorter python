def merge(l1, l2):
    res = []
    n1, n2 = len(l1), len(l2)
    i, j = 0, 0
    while i < n1 and j < n2:
        if l1[i][1] >= l2[j][1]:
            res += [l1[i]]
            i += 1
        else:
            res += [l2[j]]
            j += 1
    return res + l1[i:] + l2[j:]


def merge_sort(ls):
    n = len(ls)
    if n <= 1:
        return ls
    else:
        sub1 = merge_sort(ls[:n // 2])
        sub2 = merge_sort(ls[n // 2:])
        return merge(sub1, sub2)


def sortfrequency(numelements, lst):
    frequencylst = [[lst[0], 1]]
    num = 0
    for i in range(1, numelements):
        if lst[i] == frequencylst[num][0]:
            frequencylst[num][1] += 1
        elif lst[i] != frequencylst[num][0]:
            num += 1
            frequencylst.append([lst[i],1])
    sortedlst = merge_sort(frequencylst)
    outputlst = []
    for i in range(len(sortedlst)):
        outputlst += [sortedlst[i][0]] * sortedlst[i][1]
    return outputlst

print(sortfrequency(19, [1,2,2,3,3,3,4,4,5,5,5,5,6,6,6,7,8,9,10]))
